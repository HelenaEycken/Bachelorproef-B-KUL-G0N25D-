# -*- coding: utf-8 -*-
"""KAT III. Antibiotics in a system with susceptible and resistant bacteria

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-_NV446hJ5r1ceo2qHreqwbrrn3-iCg9
"""

############################################################
### III. Antibiotics in a system with susceptible and resistant bacteria - Helena Eycken, Margot Debruyne, Vincent Smets ###
############################################################import numpy as np
import numpy as np
import matplotlib.pyplot as plt
from scipy.integrate import solve_ivp

# Define parameters
γ = 0.23               # Decay rate of antibiotics
Ca = 0.3873            # Initial concentration of antibiotics
e = 1                  # Efficacy of antibiotics
ka = 10**(5.4)         # Antibiotic killing constant

K = 10**(7.94)         # Bacterial carrying capacity
rS = 1.85              # Growth rate of sensitive bacteria
mA = 10**(-6.03)       # Mutation rate from S to A
mS = 10**(-6.03)       # Mutation rate from A to S
rA = 1.63              # Growth rate of resistant bacteria

# Initial populations
S0 = 10**(4.67)        # Initial sensitive bacteria
A0 = 0                 # Initial resistant bacteria
y0 = [Ca, S0, A0]      # Initial conditions

def antibiotic_input(t):
    injection_times = [0] # inject at hour t .
    dose = 0              # dose value is chosen based on MIC values
    infusion_duration = 1 # duration = 1 hour
    for t_n in injection_times:
        if t_n <= t < (t_n + infusion_duration):
            return dose
    return 0

# Define the system of ODEs
def model(t, y, γ, e, ka, rS, K, mA, mS, rA):
    Ca, S, A = y

    dCa_dt = -γ * Ca + antibiotic_input(t)
    dS_dt = rS * S * (1 - ((S + A) / K)) - (e * Ca * ka) - (mA * S) + (mS * A)
    dA_dt = rA * A * (1 - ((S + A) / K)) + (mA * S) - (mS * A)

    return [dCa_dt, dS_dt, dA_dt]

# Time settings
t_end = 126
timesteps = 126
t_eval = np.linspace(0, t_end, timesteps)
# changed name of t for clarity

# Solve the system
result = solve_ivp(model, [0, timesteps], y0, args=(γ, e, ka, rS, K, mA, mS, rA), method='LSODA', t_eval=t_eval)

# Extract results
C_concentration, S_population, A_population = result.y

# Plotting
plt.figure(figsize=(10, 5))
plt.plot(result.t, C_concentration, label="Antibiotic Concentration (C)", color='green')
plt.plot(result.t, S_population, label="Sensitive Bacteria (S)", color='blue')
plt.plot(result.t, A_population, label="Resistant Bacteria (A)", color='red')
plt.xlabel("Time (hours)")
plt.ylabel("Population (cells/ml) or [antibiotic] (µg/ml)")
plt.yscale("log")
plt.legend()
plt.title("III. Antibiotics in a system with susceptible and resistant bacteria")
plt.ylim(0.001, 1e9)
plt.grid(True)
plt.show()
